{
  "info": {
    "name": "üåê Proyection API",
    "description": "API para gesti√≥n financiera personal con auto-autenticaci√≥n inteligente",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// üîß SCRIPT DE AUTO-AUTENTICACI√ìN INTELIGENTE",
          "// Se ejecuta autom√°ticamente antes de cada request",
          "",
          "// üö´ Saltar auto-login para el endpoint de login",
          "const isLoginRequest = pm.request.url.path && pm.request.url.path.includes('login');",
          "if (isLoginRequest) {",
          "    console.log('üö™ Endpoint de login - saltando auto-autenticaci√≥n');",
          "    return;",
          "}",
          "",
          "// üîÑ FUNCI√ìN PARA OBTENER TOKEN AUTOM√ÅTICAMENTE",
          "function obtenerTokenAutomatico() {",
          "    const currentToken = pm.collectionVariables.get('authToken');",
          "    ",
          "    if (currentToken && currentToken !== '') {",
          "        try {",
          "            const tokenParts = currentToken.split('.');",
          "            if (tokenParts.length === 3) {",
          "                const payload = JSON.parse(atob(tokenParts[1]));",
          "                const now = Math.floor(Date.now() / 1000);",
          "                ",
          "                if (payload.exp && payload.exp > (now + 120)) {",
          "                    const minutosRestantes = Math.floor((payload.exp - now) / 60);",
          "                    console.log('üé´ Token v√°lido por ' + minutosRestantes + ' minutos m√°s');",
          "                    return;",
          "                }",
          "            }",
          "        } catch (e) {",
          "            console.log('üîç Token inv√°lido, obteniendo uno nuevo...');",
          "        }",
          "    }",
          "    ",
          "    console.log('üîÑ Obteniendo token fresco...');",
          "    ",
          "    const loginRequest = {",
          "        url: pm.collectionVariables.get('baseUrl') + '/api/auth/login',",
          "        method: 'POST',",
          "        header: { 'Content-Type': 'application/json' },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                email: 'admin@proyection.com',",
          "                password: 'password123'",
          "            })",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(loginRequest, function (err, response) {",
          "        if (err) {",
          "            console.error('‚ùå Error obteniendo token:', err);",
          "            return;",
          "        }",
          "        ",
          "        if (response.code === 200) {",
          "            const responseData = response.json();",
          "            if (responseData.success && responseData.data.tokens) {",
          "                pm.collectionVariables.set('authToken', responseData.data.tokens.accessToken);",
          "                pm.collectionVariables.set('refreshToken', responseData.data.tokens.refreshToken);",
          "                console.log('‚úÖ Token actualizado autom√°ticamente');",
          "            }",
          "        } else {",
          "            console.error('‚ùå Login fall√≥:', response.json());",
          "        }",
          "    });",
          "}",
          "",
          "obtenerTokenAutomatico();"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "üö™ Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// üîÑ Auto-save tokens",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.tokens) {",
                  "        pm.collectionVariables.set('authToken', response.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
                  "        console.log('‚úÖ Tokens guardados autom√°ticamente!');",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has tokens', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@proyection.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "üîê Autenticar usuario y obtener tokens JWT"
          }
        },
        {
          "name": "üë§ Get Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "üë§ Obtener perfil del usuario autenticado (con auto-token)"
          }
        },
        {
          "name": "üîÑ Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.accessToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.accessToken);",
                  "        console.log('‚úÖ Token renovado autom√°ticamente!');",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh"]
            },
            "description": "üîÑ Renovar access token usando refresh token"
          }
        },
        {
          "name": "üö∂‚Äç‚ôÇÔ∏è Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// üóëÔ∏è Limpiar tokens despu√©s del logout",
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set('authToken', '');",
                  "    pm.collectionVariables.set('refreshToken', '');",
                  "    console.log('üßπ Tokens limpiados despu√©s del logout');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "üö∂‚Äç‚ôÇÔ∏è Cerrar sesi√≥n (con auto-token)"
          }
        }
      ]
    },
    {
      "name": "üõ†Ô∏è Utilities",
      "item": [
        {
          "name": "üè¶ Banks",
          "item": [
            {
              "name": "üìã Get All Banks",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/banks?page=1&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "banks"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    },
                    {
                      "key": "country",
                      "value": "CO",
                      "disabled": true
                    },
                    {
                      "key": "bankingType",
                      "value": "commercial",
                      "disabled": true
                    },
                    {
                      "key": "popular",
                      "value": "true",
                      "disabled": true
                    }
                  ]
                },
                "description": "üè¶ Obtener listado de todos los bancos con paginaci√≥n y filtros"
              }
            },
            {
              "name": "üåç Banks by Country",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/banks/country/CO",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "banks", "country", "CO"]
                },
                "description": "üåç Obtener bancos de un pa√≠s espec√≠fico (Colombia)"
              }
            },
            {
              "name": "‚≠ê Popular Banks",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/banks/popular?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "banks", "popular"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "country",
                      "value": "CO",
                      "disabled": true
                    }
                  ]
                },
                "description": "‚≠ê Obtener bancos populares"
              }
            },
            {
              "name": "üîç Search Banks",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/banks/search?q=bancolombia",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "banks", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "bancolombia"
                    },
                    {
                      "key": "country",
                      "value": "CO",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "disabled": true
                    }
                  ]
                },
                "description": "üîç Buscar bancos por nombre o c√≥digo"
              }
            },
            {
              "name": "üìä Bank Statistics",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/banks/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "banks", "stats"]
                },
                "description": "üìä Obtener estad√≠sticas de bancos"
              }
            }
          ]
        },
        {
          "name": "üåç Countries",
          "item": [
            {
              "name": "üìã Get All Countries",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries?page=1&limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "20"
                    },
                    {
                      "key": "continent",
                      "value": "SA",
                      "disabled": true
                    },
                    {
                      "key": "supported",
                      "value": "true",
                      "disabled": true
                    }
                  ]
                },
                "description": "üåç Obtener listado de todos los pa√≠ses con paginaci√≥n y filtros"
              }
            },
            {
              "name": "üåü Supported Countries",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries/supported",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries", "supported"]
                },
                "description": "üåü Obtener pa√≠ses soportados (Colombia, USA, Espa√±a)"
              }
            },
            {
              "name": "üåé Countries by Continent",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries/continent/SA",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries", "continent", "SA"]
                },
                "description": "üåé Obtener pa√≠ses de un continente (SA=Sud Am√©rica)"
              }
            },
            {
              "name": "üîç Country by ISO Code",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries/CO",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries", "CO"]
                },
                "description": "üîç Obtener informaci√≥n detallada de un pa√≠s por c√≥digo ISO"
              }
            },
            {
              "name": "üîç Search Countries",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries/search?q=colombia",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "colombia"
                    },
                    {
                      "key": "continent",
                      "value": "SA",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "disabled": true
                    }
                  ]
                },
                "description": "üîç Buscar pa√≠ses por nombre, c√≥digo ISO o nombre nativo"
              }
            },
            {
              "name": "üìä Country Statistics",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{authToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/utilities/countries/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "utilities", "countries", "stats"]
                },
                "description": "üìä Obtener estad√≠sticas de pa√≠ses"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üè• Health Check",
      "item": [
        {
          "name": "üìä Server Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "üè• Verificar estado del servidor"
          }
        },
        {
          "name": "üè† API Root",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "üè† Informaci√≥n b√°sica de la API"
          }
        }
      ]
    }
  ]
}
